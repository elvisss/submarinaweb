# Lines that start with '#' are comments.

###################################################################################
################### NuGet Patterns ######################
## Ignore the NuGet packages folder in the root of the repository
## Except the build sub directory
/packages
/packages/**/*
!/packages/build/*

# Uncomment if necessary however generally it will be regenerated when needed
#!/packages/repositories.config

# Include package target files which may be required for msbuild
# Uncomment if necessary but the new package restore process should restore
# the targets before MSBuild kicks off.
#!/packages/*.targets

# Ignore nuget files that would take solution away from Automatic Package Restore (Pre Nuget 2.7+)
nuget.targets
nuget.exe
*.nupkg

################### Windows Patterns ######################
#ignore thumbnails created by windows
Thumbs.db

#Common temp file patterns for editors
*~
~$*

################### Source Control Patterns ###############
# KDiff3 orig files
*.orig

############### (MonoDevelop/Xamarin Studio) ##############
# User-specific files
*.userprefs

################### C#/Visual Studio Patterns #############
# Build Folders
[Bb]in/
[Oo]bj/

# mstest test results
TestResults

#NUnit
*VisualState.xml
TestResult.xml

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Rr]elease/
x64/
int/
x86/
#build/
bld/
[Bb]in/
[Oo]bj/
*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.bak
*.DS_Store
*.zip
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!/*.[Cc]ache/*

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment below if you have tasks that create the project's static files in wwwroot
#wwwroot/

#Business Intelligence Reports
*.rdl.data

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder 
[Ee]xpress

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Windows Azure Build Output
csx
*.build.csdef

# Windows Store app package directory
AppPackages/

# Windows Azure Emulator
efc/
rfc/

# Windows Store app package directory
AppPackages/
# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# Chutzpah Test files
_Chutzpah*

# Others
sql
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
# node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

Ankh.NoLoad #AnkhSVN

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
/*.HTMLClient/GeneratedArtifacts
/*.DesktopClient/GeneratedArtifacts
/*.DesktopClient/ModelManifest.xml
/*.Server/GeneratedArtifacts
/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/

################## NUNIT ##################################
*.VisualState.xml
TestResult.xml

################### Build Script Patterns #################
Windows Mobile 6 Professional SDK (ARMV4I)/
Windows Mobile 5.0 Pocket PC SDK (ARMV4I)/
Deliverables/
DeliveryZip*
/_[Bb]uild/*
!/_[Bb]uild/[Ii]vy.xml
!/_[Bb]uild/[Bb]uild.xml
!/_[Bb]uild/*.bat
Build_Version.txt
log.txt
ivy.xml

################### C++ Patterns ##########################
# Compiled Object files
*.slo
*.lo
*.o

# Compiled Dynamic libraries
*.so
*.dylib

# Compiled Static libraries
*.lai
*.la
*.a

################### C Patterns ############################
# Object files
*.o

# Libraries
*.lib
*.a

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app


################### Java Patterns #########################
*.class

# Package Files #
*.jar
*.war
*.ear

# JDoc generated files
doc/

*.jfm